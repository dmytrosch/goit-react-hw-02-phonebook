{"version":3,"sources":["components/ContactForm.js","components/Filter.js","components/ContactList.js","components/App.js","index.js"],"names":["ContactForm","props","onSubmit","handler","type","name","Filter","onChange","searchHandler","ContactList","state","contacts","filter","contact","toLowerCase","includes","map","key","id","number","onClick","deleteContact","data-id","defaultProps","Phonebook","submitFormHandler","event","preventDefault","el","target","elements","nameInput","value","numberInput","isNotUniqueName","alert","setState","uuidv4","searchInputHandler","onDeleteBtnHandler","contactId","dataset","prevState","this","some","React","Component","ReactDOM","render","document","querySelector"],"mappings":"qOAGe,SAASA,EAAYC,GAChC,OACI,0BAAMC,SAAUD,EAAME,SAClB,uCACS,2BAAOC,KAAK,OAAOC,KAAK,eAEjC,yCACW,2BAAOD,KAAK,MAAMC,KAAK,iBAElC,4BAAQD,KAAK,UAAb,gBCTG,SAASE,EAAOL,GAC3B,OACI,uDAEI,2BAAOG,KAAK,OAAOC,KAAK,SAASE,SAAUN,EAAMO,iBCJ9C,SAASC,EAAYR,GAAQ,IAAD,EACVA,EAAMS,MAA3BC,EAD+B,EAC/BA,SAAUC,EADqB,EACrBA,OAClB,OACI,4BACKA,GACGD,EACKC,QAAO,SAACC,GAAD,OACJA,EAAQR,KACHS,cACAC,SAASH,EAAOE,kBAExBE,KAAI,SAACH,GAAD,OACD,wBAAII,IAAKJ,EAAQK,IACb,8BACKL,EAAQR,KADb,KACqBQ,EAAQM,QAE7B,4BACIC,QAASnB,EAAMoB,cACfC,UAAST,EAAQK,IAFrB,eAY5BT,EAAYc,aAAe,CACvBX,OAAQ,M,ICzBSY,E,4MACjBd,MAAQ,CACJC,SAAU,CACN,CAAEO,GAAI,OAAQb,KAAM,gBAAiBc,OAAQ,aAC7C,CAAED,GAAI,OAAQb,KAAM,iBAAkBc,OAAQ,aAC9C,CAAED,GAAI,OAAQb,KAAM,gBAAiBc,OAAQ,aAC7C,CAAED,GAAI,OAAQb,KAAM,iBAAkBc,OAAQ,cAElDP,OAAQ,I,EAOZa,kBAAoB,SAACC,GACjBA,EAAMC,iBACN,IAAMC,EAAKF,EAAMG,OAAOC,SAClBC,EAAYH,EAAGG,UAAUC,MACzBC,EAAcL,EAAGK,YAAYD,MAC9B,EAAKE,gBAAgBH,GAUtBI,MAAM,GAAD,OAAIJ,EAAJ,iCATL,EAAKK,SAAS,CACVzB,SAAS,GAAD,mBACD,EAAKD,MAAMC,UADV,CAEJ,CAAEO,GAAImB,cAAUhC,KAAM0B,EAAWZ,OAAQc,OAGjDL,EAAGG,UAAUC,MAAQ,GACrBJ,EAAGK,YAAYD,MAAQ,K,EAK/BM,mBAAqB,SAACZ,GAClB,EAAKU,SAAS,CAAExB,OAAQc,EAAMG,OAAOG,S,EAEzCO,mBAAqB,SAACb,GAClB,IAAMc,EAAYd,EAAMG,OAAOY,QAAQvB,GACvC,EAAKkB,UAAS,SAACM,GACX,MAAO,CACH/B,SAAU+B,EAAU/B,SAASC,QACzB,SAACC,GAAD,OAAaA,EAAQK,KAAOsB,U,8DA/B5BnC,GACZ,OAAOsC,KAAKjC,MAAMC,SAASiC,MACvB,SAAC/B,GAAD,OAAaA,EAAQR,KAAKS,gBAAkBT,EAAKS,mB,+BAmCrD,OACI,iCACI,yCACA,kBAACd,EAAD,CAAaG,QAASwC,KAAKlB,oBAC3B,wCACA,kBAACnB,EAAD,CAAQE,cAAemC,KAAKL,qBAC5B,kBAAC7B,EAAD,CACIC,MAAOiC,KAAKjC,MACZW,cAAesB,KAAKJ,0B,GAvDDM,IAAMC,WCH7CC,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,cAAc,W","file":"static/js/main.b1f2e1fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactForm(props) {\r\n    return (\r\n        <form onSubmit={props.handler}>\r\n            <label>\r\n                Name <input type=\"text\" name=\"nameInput\" />\r\n            </label>\r\n            <label>\r\n                Number <input type=\"tel\" name=\"numberInput\" />\r\n            </label>\r\n            <button type=\"submit\">Add contact</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    handler: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter(props) {\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n            <input type=\"text\" name=\"search\" onChange={props.searchHandler} />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    searchHandler: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList(props) {\r\n    const { contacts, filter } = props.state;\r\n    return (\r\n        <ul>\r\n            {filter &&\r\n                contacts\r\n                    .filter((contact) =>\r\n                        contact.name\r\n                            .toLowerCase()\r\n                            .includes(filter.toLowerCase())\r\n                    )\r\n                    .map((contact) => (\r\n                        <li key={contact.id}>\r\n                            <span>\r\n                                {contact.name}: {contact.number}\r\n                            </span>\r\n                            <button\r\n                                onClick={props.deleteContact}\r\n                                data-id={contact.id}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.defaultProps = {\r\n    filter: null,\r\n};\r\n\r\nContactList.propTypes = {\r\n    state: PropTypes.exact({\r\n        contacts: PropTypes.arrayOf(PropTypes.object),\r\n        filter: PropTypes.string,\r\n    }).isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nexport default class Phonebook extends React.Component {\r\n    state = {\r\n        contacts: [\r\n            { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n            { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n            { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n            { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n        ],\r\n        filter: \"\",\r\n    };\r\n    isNotUniqueName(name) {\r\n        return this.state.contacts.some(\r\n            (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n        );\r\n    }\r\n    submitFormHandler = (event) => {\r\n        event.preventDefault();\r\n        const el = event.target.elements;\r\n        const nameInput = el.nameInput.value;\r\n        const numberInput = el.numberInput.value;\r\n        if (!this.isNotUniqueName(nameInput)) {\r\n            this.setState({\r\n                contacts: [\r\n                    ...this.state.contacts,\r\n                    { id: uuidv4(), name: nameInput, number: numberInput },\r\n                ],\r\n            });\r\n            el.nameInput.value = \"\";\r\n            el.numberInput.value = \"\";\r\n        } else {\r\n            alert(`${nameInput} is already in contact list`);\r\n        }\r\n    };\r\n    searchInputHandler = (event) => {\r\n        this.setState({ filter: event.target.value });\r\n    };\r\n    onDeleteBtnHandler = (event) => {\r\n        const contactId = event.target.dataset.id;\r\n        this.setState((prevState) => {\r\n            return {\r\n                contacts: prevState.contacts.filter(\r\n                    (contact) => contact.id !== contactId\r\n                ),\r\n            };\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm handler={this.submitFormHandler} />\r\n                <h2>Contacts</h2>\r\n                <Filter searchHandler={this.searchInputHandler} />\r\n                <ContactList\r\n                    state={this.state}\r\n                    deleteContact={this.onDeleteBtnHandler}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Phonebook from \"./components/App\";\r\n\r\nReactDOM.render(<Phonebook />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}